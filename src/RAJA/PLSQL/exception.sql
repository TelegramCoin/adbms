-- note Error compile time (assignment to in mode param), runtime(does not find any record)
-- note Exception predefined, user defined


DECLARE
  n_empno NUMBER(8);
  v_empname VARCHAR2(50);
BEGIN
  SELECT EMPNAME INTO v_empname  FROM EMPLOYEE WHERE EMPNO = n_empno;
  EXCEPTION
  WHEN NO_DATA_FOUND THEN
    DBMS_OUTPUT.PUT_LINE(SQLERRM);
    DBMS_OUTPUT.PUT_LINE(SQLCODE);
END;

-- note Wont work syntax
DECLARE
  n_empno NUMBER(8);
  v_empname VARCHAR2(50);
BEGIN
  SELECT EMPNAME INTO v_empname  FROM EMPLOYEE WHERE SALARY = 2000;
  EXCEPTION
  WHEN NO_DATA_FOUND THEN
    DBMS_OUTPUT.PUT_LINE(SQLERRM);
    DBMS_OUTPUT.PUT_LINE(SQLCODE);
  WHEN TOO_MANY_ROWS THEN
    DBMS_OUTPUT.PUT_LINE(SQLERRM);
    DBMS_OUTPUT.PUT_LINE(SQLCODE);
  WHEN NO_DATA_FOUND OR TOO_MANY_ROWS THEN
    DBMS_OUTPUT.PUT_LINE(SQLERRM);
    DBMS_OUTPUT.PUT_LINE(SQLCODE);
END;
--

DECLARE
  n_empno NUMBER(8);
  v_empname VARCHAR2(50);
BEGIN
  SELECT EMPNAME INTO v_empname  FROM EMPLOYEE WHERE EMPNO = n_empno; -- REMOVE where clause will also raise too many rows exception
  EXCEPTION
  WHEN OTHERS THEN
    DBMS_OUTPUT.PUT_LINE(SQLERRM);
    DBMS_OUTPUT.PUT_LINE(SQLCODE);
END;
-- note User defined

DECLARE
  E_SALARY_ZERO EXCEPTION;
  v_salary VARCHAR2(10);
BEGIN
  SELECT SALARY INTO v_salary FROM EMPLOYEE WHERE EMPNO = 1;
  IF (v_salary = 0) THEN
    RAISE E_SALARY_ZERO;
  END IF;
  EXCEPTION
  WHEN E_SALARY_ZERO THEN
    DBMS_OUTPUT.PUT_LINE(SQLERRM);
    DBMS_OUTPUT.PUT_LINE(SQLCODE);
END;

SELECT * FROM EMPLOYEE;

BEGIN
  DECLARE
    n_empno NUMBER(8);
    v_empname VARCHAR2(50);
  BEGIN
    SELECT EMPNAME INTO v_empname  FROM EMPLOYEE WHERE EMPNO = 0;
    EXCEPTION
    WHEN OTHERS THEN
    DBMS_OUTPUT.PUT_LINE(SQLERRM);
    DBMS_OUTPUT.PUT_LINE(SQLCODE);
  END;
END;

BEGIN
  DECLARE
    n_empno NUMBER(8);
    v_empname VARCHAR2(50);
  BEGIN
    SELECT EMPNAME INTO v_empname  FROM EMPLOYEE WHERE EMPNO = 0;
  END;
  DBMS_OUTPUT.PUT_LINE('SQLCODE');
  EXCEPTION
    WHEN OTHERS THEN
    DBMS_OUTPUT.PUT_LINE(SQLERRM);
    DBMS_OUTPUT.PUT_LINE(SQLCODE);
END;

-- note exception is local
DECLARE
    E_SALARY_ZERO EXCEPTION;
BEGIN
  DECLARE
    v_salary VARCHAR2(10);
  BEGIN
    SELECT SALARY INTO v_salary FROM EMPLOYEE WHERE EMPNO = 1;
    IF (v_salary <> 0) THEN
      RAISE E_SALARY_ZERO;
    END IF;
  END;
  EXCEPTION
  WHEN E_SALARY_ZERO THEN
  DBMS_OUTPUT.PUT_LINE(SQLERRM);
  DBMS_OUTPUT.PUT_LINE(SQLCODE);
END;
-- Alternative
DECLARE
BEGIN
  DECLARE
    E_SALARY_ZERO EXCEPTION;
    v_salary VARCHAR2(10);
  BEGIN
    SELECT SALARY INTO v_salary FROM EMPLOYEE WHERE EMPNO = 1;
    IF (v_salary <> 0) THEN
      RAISE E_SALARY_ZERO;
    END IF;
  END;
  EXCEPTION
    WHEN OTHERS THEN
      DBMS_OUTPUT.PUT_LINE(SQLERRM);
      DBMS_OUTPUT.PUT_LINE(SQLCODE);
END;
--


BEGIN
  DECLARE
      E_SALARY_ZERO EXCEPTION;
    v_salary VARCHAR2(10);
  BEGIN
    SELECT SALARY INTO v_salary FROM EMPLOYEE WHERE EMPNO = 1;
    IF (v_salary <> 0) THEN
      RAISE E_SALARY_ZERO;
    END IF;
  END;
  EXCEPTION
  WHEN OTHERS THEN
    RAISE E_SALARY_ZERO;
    DBMS_OUTPUT.PUT_LINE(SQLERRM);
    DBMS_OUTPUT.PUT_LINE(SQLCODE);
END;

-- scope

DECLARE
  v1 NUMBER(8);
BEGIN
  DBMS_OUTPUT.PUT_LINE(v1);
  DECLARE
    v1 NUMBER(8):=20;
  BEGIN
    DBMS_OUTPUT.PUT_LINE(v1);
  END;
END;

DECLARE
  v_empname VARCHAR2(8) := 'A';
BEGIN
  SELECT empname INTO v_empname FROM EMPLOYEE WHERE EMPNAME='A';
END;